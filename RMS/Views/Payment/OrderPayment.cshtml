@model RMS.Models.PaymentViewModel
@{
    ViewData["Title"] = "Thanh toán đơn hàng";
}
<div class="flex flex-col md:flex-row gap-8">
    <!-- Cột trái: Thông tin order, danh sách món -->
    <div class="md:w-2/3 bg-white rounded-lg shadow p-6 mb-4">
        <h2 class="text-xl font-bold mb-2">Thanh toán cho bàn @Model.TableNumber</h2>
        <div class="text-gray-500 mb-2">Thời gian: @Model.CreatedAt.ToString("HH:mm dd/MM/yyyy")</div>
        <table class="w-full mb-4 border">
            <thead>
                <tr class="bg-gray-100">
                    <th class="p-2 text-left">Món</th>
                    <th class="p-2 text-center">SL</th>
                    <th class="p-2 text-right">Đơn giá</th>
                    <th class="p-2 text-right">Thành tiền</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.Dishes)
            {
                <tr>
                    <td class="p-2">@item.Name</td>
                    <td class="p-2 text-center">@item.Quantity</td>
                    <td class="p-2 text-right">@item.Price.ToString("N0") ₫</td>
                    <td class="p-2 text-right">@(item.Price * item.Quantity).ToString("N0") ₫</td>
                </tr>
            }
            </tbody>
        </table>
        <div class="flex flex-col gap-1 text-right">
            <div>Tạm tính: <span class="font-semibold">@Model.Subtotal.ToString("N0") ₫</span></div>
            <div>VAT (8%): <span class="font-semibold">@Model.Vat.ToString("N0") ₫</span></div>
            <div>Giảm giá: <span class="font-semibold">@Model.Discount.ToString("N0") ₫</span></div>
            <div class="text-lg font-bold">Tổng cộng: <span class="text-red-600">@Model.Total.ToString("N0") ₫</span></div>
        </div>
    </div>
    <!-- Cột phải: Form thanh toán -->
    <div class="md:w-1/3 bg-gray-50 rounded-lg shadow p-6 h-fit">
        <form id="paymentForm">
            <input type="hidden" name="OrderId" value="@Model.OrderId" />
            <div class="mb-4">
                <label class="block mb-1 font-semibold">Số tiền khách trả</label>
                <input type="number" name="AmountPaid" class="w-full border rounded px-2 py-1" value="@Model.Total" required min="@Model.Total" />
            </div>
            <div class="mb-4">
                <label class="block mb-1 font-semibold">Phương thức thanh toán</label>
                <select name="PaymentMethod" class="w-full border rounded px-2 py-1" required>
                    <option value="0">Tiền mặt</option>
                    <option value="1">Thẻ</option>
                    <option value="2">Séc</option>
                </select>
            </div>
            <button type="submit" class="w-full bg-green-500 hover:bg-green-600 text-white font-bold rounded px-4 py-2">Hoàn tất thanh toán</button>
        </form>
    </div>
</div>
<!-- Modal hóa đơn -->
<div id="invoiceModal" class="fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50 hidden">
    <div class="bg-white rounded-lg shadow-lg w-full max-w-md p-6 relative print:w-full print:max-w-full">
        <button type="button" class="absolute top-2 right-2 text-gray-400 hover:text-gray-700" onclick="closeInvoiceModal()">&times;</button>
        <div id="invoiceContent"></div>
        <button onclick="window.print()" class="mt-4 w-full bg-blue-600 hover:bg-blue-700 text-white rounded px-4 py-2 print:hidden">In hóa đơn</button>
    </div>
</div>
<!-- Toast -->
<div id="toast" class="fixed top-6 right-6 bg-green-500 text-white px-4 py-2 rounded shadow-lg z-50 hidden">Thanh toán thành công!</div>
<script>
function showToast(msg) {
    var toast = document.getElementById('toast');
    toast.textContent = msg;
    toast.classList.remove('hidden');
    setTimeout(() => toast.classList.add('hidden'), 2500);
}
function closeInvoiceModal() {
    document.getElementById('invoiceModal').classList.add('hidden');
}
document.getElementById('paymentForm').onsubmit = async function(e) {
    e.preventDefault();
    if (!confirm('Bạn chắc chắn muốn hoàn tất thanh toán?')) return;
    const form = e.target;
    const data = new FormData(form);
    const res = await fetch(window.location.pathname, {
        method: 'POST',
        body: data
    });
    const result = await res.json();
    if (result.success) {
        showToast('Thanh toán thành công!');
        // Render hóa đơn vào modal
        let html = `<div class='text-center mb-3'>
            <div class='font-bold text-xl mb-1'>HÓA ĐƠN THANH TOÁN</div>
            <div class='text-gray-500 mb-1'>Bàn: <b>${result.bill.TableNumber}</b> | Thời gian: <b>${result.bill.CreatedAt}</b></div>
        </div>
        <table class='w-full mb-2 border'>
            <thead><tr class='bg-gray-100'><th class='p-1'>Món</th><th class='p-1'>SL</th><th class='p-1'>Đơn giá</th><th class='p-1'>Thành tiền</th></tr></thead>
            <tbody>`;
        for (const item of result.bill.Dishes) {
            html += `<tr><td class='p-1'>${item.Name}</td><td class='p-1 text-center'>${item.Quantity}</td><td class='p-1 text-right'>${item.Price.toLocaleString()} ₫</td><td class='p-1 text-right'>${(item.Price*item.Quantity).toLocaleString()} ₫</td></tr>`;
        }
        html += `</tbody></table>
        <div class='text-right'>
            <div>Tạm tính: <b>${result.bill.Subtotal.toLocaleString()} ₫</b></div>
            <div>VAT: <b>${result.bill.Vat.toLocaleString()} ₫</b></div>
            <div>Giảm giá: <b>${result.bill.Discount.toLocaleString()} ₫</b></div>
            <div class='text-lg font-bold'>Tổng cộng: <span class='text-red-600'>${result.bill.Total.toLocaleString()} ₫</span></div>
        </div>`;
        document.getElementById('invoiceContent').innerHTML = html;
        document.getElementById('invoiceModal').classList.remove('hidden');
    }
}
</script>
