@model IEnumerable<RMS.Models.DishViewModel>

@{
    ViewData["Title"] = "Index";
    // Lấy danh sách các loại món ăn duy nhất
    var dishTypes = Model.Select(d => d.Type).Distinct().Select(t => t.ToString()).ToList();

}

<h1>MENU</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<!-- Nút phân loại -->
<div class="mb-3">
    <button type="button" class="btn btn-outline-secondary dish-filter active" data-type="all">All</button>
    @foreach (var type in dishTypes)
    {
        <button type="button" class="btn btn-outline-secondary dish-filter" data-type="@type">@type</button>
    }
</div>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedBy)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr class="dish-row" data-type="@item.Type.ToString()">
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedBy)
            </td>
            <td>
                <div class="d-flex flex-wrap gap-1">
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-info btn-sm rounded-3 px-3">
                        Edit
                    </a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary btn-sm rounded-3 px-3">
                        Details
                    </a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm rounded-3 px-3">
                        Delete
                    </a>
                </div>
            </td>
        </tr>
}
    </tbody>
</table>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Xử lý nút lọc
            $(".dish-filter").click(function() {
                var selectedType = $(this).data("type");

                // Đánh dấu nút đang chọn
                $(".dish-filter").removeClass("active btn-secondary").addClass("btn-outline-secondary");
                $(this).removeClass("btn-outline-secondary").addClass("active btn-secondary");

                // Lọc các hàng trong bảng
                if (selectedType === "all") {
                    // Hiển thị tất cả các hàng
                    $(".dish-row").show();
                } else {
                    // Ẩn tất cả các hàng trước
                    $(".dish-row").hide();
                    // Hiển thị chỉ những hàng có type phù hợp
                    $(".dish-row[data-type='" + selectedType + "']").show();
                }
            });
        });
    </script>
}
