@model KitchenDisplayViewModel
@{
    ViewData["Title"] = "Màn hình bếp (KDS)";
}

<div class="container mx-auto px-4 py-8">
    <div class="flex justify-between items-center mb-6">
        <h2 class="text-2xl font-bold">Màn hình bếp (KDS)</h2>
        <button id="refresh-kds" class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200">
            <i class="fas fa-sync-alt mr-2"></i>Làm mới
        </button>
    </div>

    <div class="bg-white rounded-xl shadow-lg p-6">
        <h3 class="font-bold text-lg mb-4 flex items-center">
            <i class="fas fa-fire text-orange-500 mr-2"></i>
            Đơn hàng đang chế biến
            @if (Model.InProgressOrders.Count > 0)
            {
                <span class="ml-2 px-2 py-1 bg-orange-100 text-orange-800 text-xs font-medium rounded-full">
                    @Model.InProgressOrders.Count
                </span>
            }
        </h3>
        <div id="in-progress-kitchen-orders" class="space-y-4">
            @if (Model.InProgressOrders.Count == 0)
            {
                <div class="text-center text-gray-500 dark:text-gray-400 py-4">
                    Không có đơn hàng đang chế biến
                </div>
            }
            else
            {
                foreach (var order in Model.InProgressOrders)
                {
                    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4 border border-light-border dark:border-dark-border kitchen-order-card" data-id="@order.Id">
                        <div class="flex justify-between items-start mb-2">
                            <div>
                                <h3 class="font-medium">@order.TableName</h3>
                                <p class="text-sm text-gray-600 dark:text-gray-400">
                                    Bắt đầu: @(order.Created?.ToString("HH:mm:ss") ?? "-") (@order.ElapsedMinutes phút)
                                </p>
                                @if (!string.IsNullOrWhiteSpace(order.Note))
                                {
                                    <div class="text-xs italic text-red-600 dark:text-red-400">Ghi chú: @order.Note</div>
                                }
                            </div>
                            <button class="complete-order-btn bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded text-sm"
                                    data-order-id="@order.Id">
                                Hoàn thành
                            </button>
                        </div>

                    </div>
                }
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Refresh KDS button
            $("#refresh-kds").click(function() {
                location.reload();
            });

            // Complete item button handler
            $(".item-complete-btn").click(function () {
                const orderId = $(this).data("order-id");
                const itemId = $(this).data("item-id");
                const button = $(this);

                $.ajax({
                    url: "/KitchenDisplay/CompleteOrderItem",
                    type: "POST",
                    data: { orderId: orderId, orderItemId: itemId },
                    success: function (response) {
                        if (response.success) {
                            button.html('<i class="fas fa-check-circle"></i>');
                            button.prop("disabled", true);
                            button.closest(".kitchen-item").addClass("completed bg-green-100");

                            // Check if all items in the order are completed
                            const kitchenOrderCard = button.closest(".kitchen-order-card");
                            const allCompleted = kitchenOrderCard.find(".kitchen-item").length ===
                                                kitchenOrderCard.find(".kitchen-item.completed").length;

                            if (allCompleted) {
                                kitchenOrderCard.find(".complete-order-btn").click();
                            }
                        } else {
                            alert("Không thể hoàn thành món. Vui lòng thử lại.");
                        }
                    },
                    error: function () {
                        alert("Đã xảy ra lỗi. Vui lòng thử lại.");
                    }
                });
            });

            // Complete order button handler
            $(".complete-order-btn").click(function () {
                const orderId = $(this).data("order-id");
                $.ajax({
                    url: "/KitchenDisplay/CompleteOrder",
                    type: "POST",
                    data: { orderId: orderId },
                    success: function (response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert("Không thể hoàn thành đơn hàng. Vui lòng thử lại.");
                        }
                    },
                    error: function () {
                        alert("Đã xảy ra lỗi. Vui lòng thử lại.");
                    }
                });
            });

            // SignalR integration for real-time updates
            $(document).on("dataChanged", function (event, data) {
                if (data.event === "OrderStatusChanged") {
                    location.reload();
                }
            });
        });

        // Add some CSS styles for the kitchen display
        document.head.insertAdjacentHTML('beforeend', `
            <style>
                .kitchen-item {
                    transition: all 0.3s ease;
                }
                .kitchen-item.completed {
                    background-color: rgba(74, 222, 128, 0.1);
                }
                @@keyframes pulse {
                    0% { box-shadow: 0 0 0 0 rgba(234, 179, 8, 0.7); }
                    70% { box-shadow: 0 0 0 10px rgba(234, 179, 8, 0); }
                    100% { box-shadow: 0 0 0 0 rgba(234, 179, 8, 0); }
                }
                .kitchen-order-card:first-child {
                    animation: pulse 2s infinite;
                }
            </style>
        `);
    </script>
}