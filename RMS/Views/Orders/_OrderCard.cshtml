@model RMS.Models.OrderViewModel
@{
    var isCurrent = Model.isPaid == false && Model.Status != RMS.Data.Entities.Order.OrderStatus.Cancelled;
    var isCancelable = Model.Status == RMS.Data.Entities.Order.OrderStatus.Pending || 
                    Model.Status == RMS.Data.Entities.Order.OrderStatus.Processing;
}
<script src="~/js/order.js" defer></script>
<script src="~/js/bills.js" defer></script>
<div class="card bg-white dark:bg-dark-card shadow rounded-lg p-6 border border-light-border dark:border-dark-border flex flex-col gap-2">
    <div class="flex justify-between items-center mb-2">
        <div>
            <span class="font-bold text-lg">Bàn: @Model.TableNumber</span>
            <span class="ml-2 px-2 py-1 rounded-full text-xs font-semibold @((isCurrent ? "bg-yellow-100 text-yellow-800" : "bg-green-100 text-green-800"))">
                @(isCurrent ? "Đang phục vụ" : "Đã thanh toán")
            </span>
        </div>
        <span class="font-mono text-base text-primary">#@Model.Id</span>
    </div>
    <div class="mb-2">
        <div class="flex justify-between">
            <span class="text-gray-500 dark:text-gray-400">Món:</span>
            <span class="truncate font-semibold" title="@(Model.Dishes != null && Model.Dishes.Any() ? string.Join(", ", Model.Dishes.Select(d => d.Name)) : "Không có món")">
                @(Model.Dishes != null && Model.Dishes.Any() ? string.Join(", ", Model.Dishes.Select(d => d.Name)) : "Không có món")
            </span>
        </div>
        <div class="flex justify-between">
            <span class="text-gray-500 dark:text-gray-400">Tổng tiền:</span>
            <span class="font-bold text-lg text-green-600">@Model.TotalAmount.Value.ToString("N0") ₫</span>
        </div>
        <div class="flex justify-between">
            <span class="text-gray-500 dark:text-gray-400">Thời gian tạo:</span>
            <span class="">@Model.CreatedAt.Value.ToString("HH:mm dd/MM/yyyy")</span>
        </div>
    </div>
    <div class="flex gap-2 mt-3">
        <button type="button" class="bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded text-xs font-semibold flex items-center" onclick="showOrderDetail(@Model.Id)">
            <i class="fas fa-info-circle mr-1"></i> Xem chi tiết
        </button>
        @if (isCancelable)
        {
            <button type="button" class="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded text-xs font-semibold flex items-center" onclick="cancelOrder(@Model.Id)">
                <i class="fas fa-times mr-1"></i> Hủy
            </button>
        }
        @if (isCurrent)
        {
            <button type="button" class="bg-yellow-500 hover:bg-yellow-600 text-white px-3 py-1 rounded text-xs font-semibold flex items-center" onclick="editOrder(@Model.Id)">
                <i class="fas fa-edit mr-1"></i> Sửa
            </button>
            <form asp-action="CompletePayment" asp-controller="Orders" method="post" style="display:inline;">
                <input type="hidden" name="orderId" value="@Model.Id" />
                <input type="hidden" name="tableId" value="@Model.TableId" />
                <button type="submit" class="bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded text-xs font-semibold flex items-center">
                    <i class="fas fa-cash-register mr-1"></i> Thanh toán
                </button>
            </form>
        }
    </div>
</div>